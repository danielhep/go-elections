package main

import (
	"fmt"
	"github.com/danielhep/go-elections/internal/types"
)

templ mainPage(contests []types.Contest) {
	@layout("Election Results") {
		<div class="bg-white shadow overflow-hidden sm:rounded-lg">
			<div class="px-4 py-5 sm:px-6">
				<h2 class="text-xl font-semibold text-gray-900">Contests by Ballot Title</h2>
			</div>
			<div class="border-t border-gray-200">
				@groupContests(contests)
			</div>
		</div>
	}
}

templ groupContests(contests []types.Contest) {
	<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4">
		for ballotTitle, groupedContests := range groupContestsByBallotTitle(contests) {
			<div class="bg-gray-50 rounded-lg overflow-hidden shadow" x-data="{ expanded: false }">
				<div class="px-4 py-3 bg-gray-100">
					<h3 class="text-lg font-medium text-gray-900">{ ballotTitle }</h3>
				</div>
				<ul class="divide-y divide-gray-200">
					for i, contest := range groupedContests {
						<li x-show={ fmt.Sprintf("expanded || %d < 5", i) }>
							<a href={ templ.URL(fmt.Sprintf("/contest/%d", contest.ID)) } class="block hover:bg-gray-100 px-4 py-3 transition duration-150 ease-in-out">
								<p class="text-sm font-medium text-gray-700">{ contest.District }</p>
							</a>
						</li>
					}
				</ul>
				if len(groupedContests) > 5 {
					<div class="px-4 py-3 bg-gray-100 text-center">
						<button
							@click="expanded = !expanded"
							x-text="expanded ? 'Show Less' : 'Show More'"
							class="text-sm font-medium text-blue-600 hover:text-blue-800"
						></button>
					</div>
				}
			</div>
		}
	</div>
}

func groupContestsByBallotTitle(contests []types.Contest) map[string][]types.Contest {
	grouped := make(map[string][]types.Contest)
	for _, contest := range contests {
		grouped[contest.Name] = append(grouped[contest.Name], contest)
	}
	return grouped
}
