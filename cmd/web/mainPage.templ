package main

import (
	"fmt"
	"github.com/danielhep/go-elections/internal/types"
	"maps"
	"slices"
	"strings"
)

templ mainPage(contests []types.Contest) {
	@layout("Election Results") {
		<div class="bg-white shadow overflow-hidden sm:rounded-lg">
			<div class="px-4 py-5 sm:px-6 flex">
				<h2 class="text-xl font-semibold text-gray-900">Contests by Ballot Title</h2>
			</div>
			<div class="border-t border-gray-200" id="contests">
				@groupContests(groupContestsByBallotTitle(contests))
			</div>
		</div>
	}
}

templ groupContests(groupedContests map[string][]types.Contest) {
	<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4">
		for _, contest := range getSortedContests(groupedContests) {
			<div class="bg-gray-50 rounded-lg overflow-hidden shadow" x-data="{ expanded: false }">
				<div class="px-4 py-3 bg-gray-100">
					<h3 class="text-lg font-medium text-gray-900">{ contest }</h3>
				</div>
				<ul class="divide-y divide-gray-200">
					for i, contest := range groupedContests[contest] {
						<li x-show={ fmt.Sprintf("expanded || %d < 5", i) }>
							<a href={ templ.URL(fmt.Sprintf("/contest/%d", contest.ID)) } class="block hover:bg-gray-100 px-4 py-3 transition duration-150 ease-in-out flex gap-2">
								<p class="text-sm font-medium text-gray-700">{ contest.District }</p>
								@flagIcons(contest)
							</a>
						</li>
					}
				</ul>
				if len(groupedContests[contest]) > 5 {
					<div class="px-4 py-3 bg-gray-100 text-center">
						<button
							@click="expanded = !expanded"
							x-text="expanded ? 'Show Less' : 'Show More'"
							class="text-sm font-medium text-blue-600 hover:text-blue-800"
						></button>
					</div>
				}
			</div>
		}
	</div>
}

templ flagIcons(contest types.Contest) {
	if slices.Contains(contest.Jurisdictions, string(types.CountyJurisdiction)) {
		<img src="/static/kingcounty.jpg" class="h-6 rounded-md" alt="This entry includes data from King County."/>
	}
	if slices.Contains(contest.Jurisdictions, string(types.StateJurisdiction)) {
		<img src="/static/stateflag.jpg" class="h-6 rounded-md" alt="This entry includes data from the Secretary of State."/>
	}
}

func groupContestsByBallotTitle(contests []types.Contest) map[string][]types.Contest {
	grouped := make(map[string][]types.Contest)
	for _, contest := range contests {
		grouped[contest.BallotTitle] = append(grouped[contest.BallotTitle], contest)
	}

	return grouped
}

func getSortedContests(groupedContests map[string][]types.Contest) []string {
	contests := slices.Collect(maps.Keys(groupedContests))
	slices.SortStableFunc(contests, func(i, j string) int {
		return strings.Compare(i, j)
	})
	slices.SortStableFunc(contests, func(i, j string) int {
		return len(groupedContests[i]) - len(groupedContests[j])
	})
	return contests
}
